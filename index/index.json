{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/getting-started","title":"Getting started","type":"article"},{"title":"Foundation","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mock\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mock\/mock","title":"var mock: Mock","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mock\/call(_:args:)-8dsle","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result?>, args: Arguments) async -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/call(_:args:)-97wpt","title":"func call<Arguments, Result>(MockReference<Arguments, Result?>, args: Arguments) -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/call(_:args:fallback:)-55i7","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/call(_:args:fallback:)-78l3s","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/call(_:args:file:line:functioncall:)-2769j","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/call(_:args:file:line:functioncall:)-31q1y","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/calls(to:)-1u3x0","title":"func calls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/calls(to:)-6gi4c","title":"func calls<Arguments, Result>(to: MockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/calls(to:)-76fgb","title":"func calls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/calls(to:)-9a4d0","title":"func calls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/hascalled(_:)-2o66l","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/hascalled(_:)-3df8i","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/hascalled(_:)-4eqq2","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/hascalled(_:)-7lcei","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/hascalled(_:numberoftimes:)-102s9","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/hascalled(_:numberoftimes:)-4cnzj","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/hascalled(_:numberoftimes:)-7ez8x","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/hascalled(_:numberoftimes:)-7josu","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/registerresult(for:result:)-2wr89","title":"func registerResult<Arguments, Result>(for: MockReference<Arguments, Result>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/registerresult(for:result:)-8mz3m","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, MockReference<Arguments, Result>>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/registerresult(for:result:)-8nvcq","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, AsyncMockReference<Arguments, Result>>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/registerresult(for:result:)-9c214","title":"func registerResult<Arguments, Result>(for: AsyncMockReference<Arguments, Result>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/resetcalls()","title":"func resetCalls()","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/resetcalls(to:)-3gftc","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>)","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/resetcalls(to:)-603hk","title":"func resetCalls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/resetcalls(to:)-84cx8","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>)","type":"method"},{"path":"\/documentation\/mockingkit\/mock\/resetcalls(to:)-etub","title":"func resetCalls<Arguments, Result>(to: MockReference<Arguments, Result>)","type":"method"}],"path":"\/documentation\/mockingkit\/mock\/mockable-implementations","title":"Mockable Implementations","type":"symbol"}],"path":"\/documentation\/mockingkit\/mock","title":"Mock","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockable\/mock","title":"var mock: Mock","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockable\/call(_:args:)-1v8x2","title":"func call<Arguments, Result>(MockReference<Arguments, Result?>, args: Arguments) -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/call(_:args:)-268h8","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result?>, args: Arguments) async -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/call(_:args:fallback:)-5hyoh","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/call(_:args:fallback:)-7z641","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/call(_:args:file:line:functioncall:)-5v998","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/call(_:args:file:line:functioncall:)-o5yr","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/calls(to:)-1219b","title":"func calls<Arguments, Result>(to: MockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/calls(to:)-49io7","title":"func calls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/calls(to:)-7u0cg","title":"func calls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/calls(to:)-mag1","title":"func calls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/hascalled(_:)-3hvcf","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/hascalled(_:)-3zq4c","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/hascalled(_:)-56g0d","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/hascalled(_:)-9f0d1","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/hascalled(_:numberoftimes:)-3qlhc","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/hascalled(_:numberoftimes:)-65cb0","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/hascalled(_:numberoftimes:)-66d5j","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/hascalled(_:numberoftimes:)-9sgnr","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/registerresult(for:result:)-1hb20","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, AsyncMockReference<Arguments, Result>>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/registerresult(for:result:)-1r9zq","title":"func registerResult<Arguments, Result>(for: AsyncMockReference<Arguments, Result>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/registerresult(for:result:)-1ss5x","title":"func registerResult<Arguments, Result>(for: MockReference<Arguments, Result>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/registerresult(for:result:)-4q9nb","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, MockReference<Arguments, Result>>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/resetcalls()","title":"func resetCalls()","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/resetcalls(to:)-1lw7u","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/resetcalls(to:)-3h7ko","title":"func resetCalls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/resetcalls(to:)-6s69k","title":"func resetCalls<Arguments, Result>(to: MockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockable\/resetcalls(to:)-er9g","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockable\/function","title":"Mockable.Function","type":"typealias"}],"path":"\/documentation\/mockingkit\/mockable","title":"Mockable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockcall\/arguments","title":"let arguments: Arguments","type":"property"},{"path":"\/documentation\/mockingkit\/mockcall\/result","title":"let result: Result?","type":"property"}],"path":"\/documentation\/mockingkit\/mockcall","title":"MockCall","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockreference\/init(_:)","title":"init((Arguments) throws -> Result)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockreference\/function","title":"let function: (Arguments) throws -> Result","type":"property"},{"path":"\/documentation\/mockingkit\/mockreference\/id","title":"let id: UUID","type":"property"}],"path":"\/documentation\/mockingkit\/mockreference","title":"MockReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/asyncmockreference\/init(_:)","title":"init((Arguments) async throws -> Result)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/asyncmockreference\/function","title":"let function: (Arguments) async throws -> Result","type":"property"},{"path":"\/documentation\/mockingkit\/asyncmockreference\/id","title":"let id: UUID","type":"property"}],"path":"\/documentation\/mockingkit\/asyncmockreference","title":"AsyncMockReference","type":"struct"},{"title":"System Mocks","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/addobserverfornameref","title":"var addObserverForNameRef: MockReference<(NSNotification.Name?, Any?, OperationQueue?, (Notification) -> Void), NSObjectProtocol>","type":"property"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/addobserverwithselectorref","title":"var addObserverWithSelectorRef: MockReference<(Any, Selector, NSNotification.Name?, Any?), ()>","type":"property"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/mock","title":"let mock: Mock","type":"property"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/postnotificationnameref","title":"var postNotificationNameRef: MockReference<(NSNotification.Name, Any?, [AnyHashable : Any]?), ()>","type":"property"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/postnotificationref","title":"var postNotificationRef: MockReference<Notification, ()>","type":"property"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/removeobserverref","title":"var removeObserverRef: MockReference<(Any, NSNotification.Name?, Any?), ()>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/addobserver(_:selector:name:object:)","title":"func addObserver(Any, selector: Selector, name: NSNotification.Name?, object: Any?)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/addobserver(forname:object:queue:using:)","title":"func addObserver(forName: NSNotification.Name?, object: Any?, queue: OperationQueue?, using: (Notification) -> Void) -> NSObjectProtocol","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/post(_:)","title":"func post(Notification)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/post(name:object:)","title":"func post(name: NSNotification.Name, object: Any?)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/post(name:object:userinfo:)","title":"func post(name: NSNotification.Name, object: Any?, userInfo: [AnyHashable : Any]?)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/removeobserver(_:)","title":"func removeObserver(Any)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/removeobserver(_:name:object:)","title":"func removeObserver(Any, name: NSNotification.Name?, object: Any?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/call(_:args:)-1j2me","title":"func call<Arguments, Result>(MockReference<Arguments, Result?>, args: Arguments) -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/call(_:args:)-44ljc","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result?>, args: Arguments) async -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/call(_:args:fallback:)-3rmv8","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/call(_:args:fallback:)-8nhpg","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/call(_:args:file:line:functioncall:)-1pllj","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/call(_:args:file:line:functioncall:)-7uyxs","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/calls(to:)-1ij8u","title":"func calls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/calls(to:)-1ordf","title":"func calls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/calls(to:)-67wej","title":"func calls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/calls(to:)-gjr2","title":"func calls<Arguments, Result>(to: MockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/hascalled(_:)-1xcz1","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/hascalled(_:)-24fxv","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/hascalled(_:)-9wriq","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/hascalled(_:)-y266","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/hascalled(_:numberoftimes:)-2hkl8","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/hascalled(_:numberoftimes:)-7om5i","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/hascalled(_:numberoftimes:)-8zp8c","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/hascalled(_:numberoftimes:)-936yk","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/registerresult(for:result:)-5udab","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, AsyncMockReference<Arguments, Result>>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/registerresult(for:result:)-8hunn","title":"func registerResult<Arguments, Result>(for: AsyncMockReference<Arguments, Result>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/registerresult(for:result:)-8vb1n","title":"func registerResult<Arguments, Result>(for: MockReference<Arguments, Result>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/registerresult(for:result:)-912mm","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, MockReference<Arguments, Result>>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/resetcalls()","title":"func resetCalls()","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/resetcalls(to:)-2u668","title":"func resetCalls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/resetcalls(to:)-69jiu","title":"func resetCalls<Arguments, Result>(to: MockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/resetcalls(to:)-7w1v3","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>)","type":"method"},{"path":"\/documentation\/mockingkit\/mocknotificationcenter\/resetcalls(to:)-9r7jl","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>)","type":"method"}],"path":"\/documentation\/mockingkit\/mocknotificationcenter\/mockable-implementations","title":"Mockable Implementations","type":"symbol"}],"path":"\/documentation\/mockingkit\/mocknotificationcenter","title":"MockNotificationCenter","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/mock","title":"let mock: Mock","type":"property"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/setdataref","title":"var setDataRef: MockReference<(Data, String), ()>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/setdata(_:forpasteboardtype:)","title":"func setData(Data, forPasteboardType: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/call(_:args:)-7ac04","title":"func call<Arguments, Result>(MockReference<Arguments, Result?>, args: Arguments) -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/call(_:args:)-8qmca","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result?>, args: Arguments) async -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/call(_:args:fallback:)-24exn","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/call(_:args:fallback:)-7h41w","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/call(_:args:file:line:functioncall:)-5fjmy","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/call(_:args:file:line:functioncall:)-6u1f5","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/calls(to:)-1guck","title":"func calls<Arguments, Result>(to: MockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/calls(to:)-4l0rk","title":"func calls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/calls(to:)-4rslj","title":"func calls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/calls(to:)-pwsx","title":"func calls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/hascalled(_:)-37m8n","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/hascalled(_:)-3dzsq","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/hascalled(_:)-8tf4t","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/hascalled(_:)-9paok","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/hascalled(_:numberoftimes:)-183ez","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/hascalled(_:numberoftimes:)-1oooz","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/hascalled(_:numberoftimes:)-4t380","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/hascalled(_:numberoftimes:)-5ocva","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/registerresult(for:result:)-3idbl","title":"func registerResult<Arguments, Result>(for: MockReference<Arguments, Result>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/registerresult(for:result:)-51dih","title":"func registerResult<Arguments, Result>(for: AsyncMockReference<Arguments, Result>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/registerresult(for:result:)-7bdbn","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, MockReference<Arguments, Result>>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/registerresult(for:result:)-7xw1j","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, AsyncMockReference<Arguments, Result>>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/resetcalls()","title":"func resetCalls()","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/resetcalls(to:)-3058q","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/resetcalls(to:)-81oe6","title":"func resetCalls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/resetcalls(to:)-9qr76","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockpasteboard\/resetcalls(to:)-bpcb","title":"func resetCalls<Arguments, Result>(to: MockReference<Arguments, Result>)","type":"method"}],"path":"\/documentation\/mockingkit\/mockpasteboard\/mockable-implementations","title":"Mockable Implementations","type":"symbol"}],"path":"\/documentation\/mockingkit\/mockpasteboard","title":"MockPasteboard","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/adjusttextpositionref","title":"var adjustTextPositionRef: MockReference<Int, ()>","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/autocapitalizationtype","title":"var autocapitalizationType: UITextAutocapitalizationType","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/deletebackwardref","title":"var deleteBackwardRef: MockReference<(), Void>","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/documentcontextafterinput","title":"var documentContextAfterInput: String?","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/documentcontextbeforeinput","title":"var documentContextBeforeInput: String?","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/documentidentifier","title":"var documentIdentifier: UUID","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/documentinputmode","title":"var documentInputMode: UITextInputMode?","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hastext","title":"var hasText: Bool","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/inserttextref","title":"var insertTextRef: MockReference<String, ()>","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/keyboardappearance","title":"var keyboardAppearance: UIKeyboardAppearance","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/mock","title":"let mock: Mock","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/selectedtext","title":"var selectedText: String?","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/setmarkedtextref","title":"var setMarkedTextRef: MockReference<(String, NSRange), ()>","type":"property"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/unmarktextref","title":"var unmarkTextRef: MockReference<(), ()>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/adjusttextposition(bycharacteroffset:)","title":"func adjustTextPosition(byCharacterOffset: Int)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/deletebackward()","title":"func deleteBackward()","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/inserttext(_:)","title":"func insertText(String)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/setmarkedtext(_:selectedrange:)","title":"func setMarkedText(String, selectedRange: NSRange)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/unmarktext()","title":"func unmarkText()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/call(_:args:)-5xloo","title":"func call<Arguments, Result>(MockReference<Arguments, Result?>, args: Arguments) -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/call(_:args:)-6g290","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result?>, args: Arguments) async -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/call(_:args:fallback:)-4kgx0","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/call(_:args:fallback:)-6d1hi","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/call(_:args:file:line:functioncall:)-9doyc","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/call(_:args:file:line:functioncall:)-agpr","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/calls(to:)-1rm42","title":"func calls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/calls(to:)-4oqha","title":"func calls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/calls(to:)-5y4s","title":"func calls<Arguments, Result>(to: MockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/calls(to:)-71bdh","title":"func calls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hascalled(_:)-26i6y","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hascalled(_:)-6ff64","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hascalled(_:)-761uh","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hascalled(_:)-urr8","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hascalled(_:numberoftimes:)-1roro","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hascalled(_:numberoftimes:)-407xe","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hascalled(_:numberoftimes:)-66wkb","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/hascalled(_:numberoftimes:)-8bl4v","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/registerresult(for:result:)-47jmu","title":"func registerResult<Arguments, Result>(for: AsyncMockReference<Arguments, Result>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/registerresult(for:result:)-5kyr0","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, AsyncMockReference<Arguments, Result>>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/registerresult(for:result:)-9qxw9","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, MockReference<Arguments, Result>>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/registerresult(for:result:)-r2mn","title":"func registerResult<Arguments, Result>(for: MockReference<Arguments, Result>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/resetcalls()","title":"func resetCalls()","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/resetcalls(to:)-2noh1","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/resetcalls(to:)-4t9mo","title":"func resetCalls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/resetcalls(to:)-984hf","title":"func resetCalls<Arguments, Result>(to: MockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/resetcalls(to:)-o21g","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>)","type":"method"}],"path":"\/documentation\/mockingkit\/mocktextdocumentproxy\/mockable-implementations","title":"Mockable Implementations","type":"symbol"}],"path":"\/documentation\/mockingkit\/mocktextdocumentproxy","title":"MockTextDocumentProxy","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/arrayref","title":"var arrayRef: MockReference<String, [Any]?>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/boolref","title":"var boolRef: MockReference<String, Bool>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/dataref","title":"var dataRef: MockReference<String, Data?>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/doubleref","title":"var doubleRef: MockReference<String, Double>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/floatref","title":"var floatRef: MockReference<String, Float>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/integerref","title":"var integerRef: MockReference<String, Int>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/mock","title":"var mock: Mock","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/objectref","title":"var objectRef: MockReference<String, Any?>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/setboolref","title":"var setBoolRef: MockReference<(Bool, String), Void>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/setdoubleref","title":"var setDoubleRef: MockReference<(Double, String), Void>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/setfloatref","title":"var setFloatRef: MockReference<(Float, String), Void>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/setintegerref","title":"var setIntegerRef: MockReference<(Int, String), Void>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/seturlref","title":"var setUrlRef: MockReference<(URL?, String), Void>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/setvalueref","title":"var setValueRef: MockReference<(Any?, String), Void>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/stringarrayref","title":"var stringArrayRef: MockReference<String, [String]?>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/stringref","title":"var stringRef: MockReference<String, String?>","type":"property"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/urlref","title":"var urlRef: MockReference<String, URL?>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/array(forkey:)","title":"func array(forKey: String) -> [Any]?","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/bool(forkey:)","title":"func bool(forKey: String) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/data(forkey:)","title":"func data(forKey: String) -> Data?","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/double(forkey:)","title":"func double(forKey: String) -> Double","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/float(forkey:)","title":"func float(forKey: String) -> Float","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/integer(forkey:)","title":"func integer(forKey: String) -> Int","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/object(forkey:)","title":"func object(forKey: String) -> Any?","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/set(_:forkey:)-17z4m","title":"func set(Float, forKey: String)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/set(_:forkey:)-1dic1","title":"func set(Bool, forKey: String)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/set(_:forkey:)-3cc83","title":"func set(Any?, forKey: String)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/set(_:forkey:)-3sz6a","title":"func set(Int, forKey: String)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/set(_:forkey:)-5yltu","title":"func set(Double, forKey: String)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/set(_:forkey:)-8y6im","title":"func set(URL?, forKey: String)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/setvalue(_:forkey:)","title":"func setValue(Any?, forKey: String)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/string(forkey:)","title":"func string(forKey: String) -> String?","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/stringarray(forkey:)","title":"func stringArray(forKey: String) -> [String]?","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/url(forkey:)","title":"func url(forKey: String) -> URL?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/call(_:args:)-4o4u","title":"func call<Arguments, Result>(MockReference<Arguments, Result?>, args: Arguments) -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/call(_:args:)-94ozy","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result?>, args: Arguments) async -> Result?","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/call(_:args:fallback:)-8bi49","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/call(_:args:fallback:)-9fezm","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, fallback: () -> Result) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/call(_:args:file:line:functioncall:)-1dfqc","title":"func call<Arguments, Result>(MockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/call(_:args:file:line:functioncall:)-6xjs4","title":"func call<Arguments, Result>(AsyncMockReference<Arguments, Result>, args: Arguments, file: StaticString, line: UInt, functionCall: StaticString) async -> Result","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/calls(to:)-54700","title":"func calls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/calls(to:)-7omvc","title":"func calls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/calls(to:)-7vjt5","title":"func calls<Arguments, Result>(to: MockReference<Arguments, Result>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/calls(to:)-abux","title":"func calls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>) -> [MockCall<Arguments, Result>]","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/hascalled(_:)-1ds14","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/hascalled(_:)-3tb0a","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/hascalled(_:)-4237m","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/hascalled(_:)-6i98h","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/hascalled(_:numberoftimes:)-3ntjc","title":"func hasCalled<Arguments, Result>(MockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/hascalled(_:numberoftimes:)-4wbws","title":"func hasCalled<Arguments, Result>(AsyncMockReference<Arguments, Result>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/hascalled(_:numberoftimes:)-6rvh0","title":"func hasCalled<Arguments, Result>(KeyPath<Self, MockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/hascalled(_:numberoftimes:)-ulte","title":"func hasCalled<Arguments, Result>(KeyPath<Self, AsyncMockReference<Arguments, Result>>, numberOfTimes: Int) -> Bool","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/registerresult(for:result:)-14zse","title":"func registerResult<Arguments, Result>(for: AsyncMockReference<Arguments, Result>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/registerresult(for:result:)-7ducd","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, AsyncMockReference<Arguments, Result>>, result: (Arguments) async throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/registerresult(for:result:)-7ny18","title":"func registerResult<Arguments, Result>(for: KeyPath<Self, MockReference<Arguments, Result>>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/registerresult(for:result:)-fulh","title":"func registerResult<Arguments, Result>(for: MockReference<Arguments, Result>, result: (Arguments) throws -> Result)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/resetcalls()","title":"func resetCalls()","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/resetcalls(to:)-3a2og","title":"func resetCalls<Arguments, Result>(to: MockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/resetcalls(to:)-5065z","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, MockReference<Arguments, Result>>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/resetcalls(to:)-79ket","title":"func resetCalls<Arguments, Result>(to: AsyncMockReference<Arguments, Result>)","type":"method"},{"path":"\/documentation\/mockingkit\/mockuserdefaults\/resetcalls(to:)-9l667","title":"func resetCalls<Arguments, Result>(to: KeyPath<Self, AsyncMockReference<Arguments, Result>>)","type":"method"}],"path":"\/documentation\/mockingkit\/mockuserdefaults\/mockable-implementations","title":"Mockable Implementations","type":"symbol"}],"path":"\/documentation\/mockingkit\/mockuserdefaults","title":"MockUserDefaults","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/anycall","title":"AnyCall","type":"protocol"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/mockingkit\/escaping(_:)","title":"func escaping<Arg1>(Arg1) -> (Arg1)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:)","title":"func escaping<Arg1, Arg2>(Arg1, Arg2) -> (Arg1, Arg2)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3>(Arg1, Arg2, Arg3) -> (Arg1, Arg2, Arg3)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4>(Arg1, Arg2, Arg3, Arg4) -> (Arg1, Arg2, Arg3, Arg4)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5>(Arg1, Arg2, Arg3, Arg4, Arg5) -> (Arg1, Arg2, Arg3, Arg4, Arg5)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19)!","type":"func"},{"path":"\/documentation\/mockingkit\/escaping(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","title":"func escaping<Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20>(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20) -> (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20)!","type":"func"}],"path":"\/documentation\/mockingkit","title":"MockingKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}